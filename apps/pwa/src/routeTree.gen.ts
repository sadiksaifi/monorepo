/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AppImport } from './routes/_app'
import { Route as AppIndexImport } from './routes/_app/index'
import { Route as AppProfileImport } from './routes/_app/profile'
import { Route as AppHomeImport } from './routes/_app/home'
import { Route as AppFriendsImport } from './routes/_app/friends'
import { Route as AppDiscoverImport } from './routes/_app/discover'
import { Route as AppChatImport } from './routes/_app/chat'
import { Route as publicHealthcheckImport } from './routes/(public)/healthcheck'
import { Route as publicAuthRouteImport } from './routes/(public)/auth/route'
import { Route as AppTestNotificationsImport } from './routes/_app/test/notifications'
import { Route as publicAuthVerifyAccountImport } from './routes/(public)/auth/verify-account'
import { Route as publicAuthSignUpImport } from './routes/(public)/auth/sign-up'
import { Route as publicAuthSignInImport } from './routes/(public)/auth/sign-in'
import { Route as publicAuthForgetPasswordImport } from './routes/(public)/auth/forget-password'

// Create/Update Routes

const AppRoute = AppImport.update({
  id: '/_app',
  getParentRoute: () => rootRoute,
} as any)

const AppIndexRoute = AppIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AppRoute,
} as any)

const AppProfileRoute = AppProfileImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => AppRoute,
} as any)

const AppHomeRoute = AppHomeImport.update({
  id: '/home',
  path: '/home',
  getParentRoute: () => AppRoute,
} as any)

const AppFriendsRoute = AppFriendsImport.update({
  id: '/friends',
  path: '/friends',
  getParentRoute: () => AppRoute,
} as any)

const AppDiscoverRoute = AppDiscoverImport.update({
  id: '/discover',
  path: '/discover',
  getParentRoute: () => AppRoute,
} as any)

const AppChatRoute = AppChatImport.update({
  id: '/chat',
  path: '/chat',
  getParentRoute: () => AppRoute,
} as any)

const publicHealthcheckRoute = publicHealthcheckImport.update({
  id: '/(public)/healthcheck',
  path: '/healthcheck',
  getParentRoute: () => rootRoute,
} as any)

const publicAuthRouteRoute = publicAuthRouteImport.update({
  id: '/(public)/auth',
  path: '/auth',
  getParentRoute: () => rootRoute,
} as any)

const AppTestNotificationsRoute = AppTestNotificationsImport.update({
  id: '/test/notifications',
  path: '/test/notifications',
  getParentRoute: () => AppRoute,
} as any)

const publicAuthVerifyAccountRoute = publicAuthVerifyAccountImport.update({
  id: '/verify-account',
  path: '/verify-account',
  getParentRoute: () => publicAuthRouteRoute,
} as any)

const publicAuthSignUpRoute = publicAuthSignUpImport.update({
  id: '/sign-up',
  path: '/sign-up',
  getParentRoute: () => publicAuthRouteRoute,
} as any)

const publicAuthSignInRoute = publicAuthSignInImport.update({
  id: '/sign-in',
  path: '/sign-in',
  getParentRoute: () => publicAuthRouteRoute,
} as any)

const publicAuthForgetPasswordRoute = publicAuthForgetPasswordImport.update({
  id: '/forget-password',
  path: '/forget-password',
  getParentRoute: () => publicAuthRouteRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_app': {
      id: '/_app'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AppImport
      parentRoute: typeof rootRoute
    }
    '/(public)/auth': {
      id: '/(public)/auth'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof publicAuthRouteImport
      parentRoute: typeof rootRoute
    }
    '/(public)/healthcheck': {
      id: '/(public)/healthcheck'
      path: '/healthcheck'
      fullPath: '/healthcheck'
      preLoaderRoute: typeof publicHealthcheckImport
      parentRoute: typeof rootRoute
    }
    '/_app/chat': {
      id: '/_app/chat'
      path: '/chat'
      fullPath: '/chat'
      preLoaderRoute: typeof AppChatImport
      parentRoute: typeof AppImport
    }
    '/_app/discover': {
      id: '/_app/discover'
      path: '/discover'
      fullPath: '/discover'
      preLoaderRoute: typeof AppDiscoverImport
      parentRoute: typeof AppImport
    }
    '/_app/friends': {
      id: '/_app/friends'
      path: '/friends'
      fullPath: '/friends'
      preLoaderRoute: typeof AppFriendsImport
      parentRoute: typeof AppImport
    }
    '/_app/home': {
      id: '/_app/home'
      path: '/home'
      fullPath: '/home'
      preLoaderRoute: typeof AppHomeImport
      parentRoute: typeof AppImport
    }
    '/_app/profile': {
      id: '/_app/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof AppProfileImport
      parentRoute: typeof AppImport
    }
    '/_app/': {
      id: '/_app/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AppIndexImport
      parentRoute: typeof AppImport
    }
    '/(public)/auth/forget-password': {
      id: '/(public)/auth/forget-password'
      path: '/forget-password'
      fullPath: '/auth/forget-password'
      preLoaderRoute: typeof publicAuthForgetPasswordImport
      parentRoute: typeof publicAuthRouteImport
    }
    '/(public)/auth/sign-in': {
      id: '/(public)/auth/sign-in'
      path: '/sign-in'
      fullPath: '/auth/sign-in'
      preLoaderRoute: typeof publicAuthSignInImport
      parentRoute: typeof publicAuthRouteImport
    }
    '/(public)/auth/sign-up': {
      id: '/(public)/auth/sign-up'
      path: '/sign-up'
      fullPath: '/auth/sign-up'
      preLoaderRoute: typeof publicAuthSignUpImport
      parentRoute: typeof publicAuthRouteImport
    }
    '/(public)/auth/verify-account': {
      id: '/(public)/auth/verify-account'
      path: '/verify-account'
      fullPath: '/auth/verify-account'
      preLoaderRoute: typeof publicAuthVerifyAccountImport
      parentRoute: typeof publicAuthRouteImport
    }
    '/_app/test/notifications': {
      id: '/_app/test/notifications'
      path: '/test/notifications'
      fullPath: '/test/notifications'
      preLoaderRoute: typeof AppTestNotificationsImport
      parentRoute: typeof AppImport
    }
  }
}

// Create and export the route tree

interface AppRouteChildren {
  AppChatRoute: typeof AppChatRoute
  AppDiscoverRoute: typeof AppDiscoverRoute
  AppFriendsRoute: typeof AppFriendsRoute
  AppHomeRoute: typeof AppHomeRoute
  AppProfileRoute: typeof AppProfileRoute
  AppIndexRoute: typeof AppIndexRoute
  AppTestNotificationsRoute: typeof AppTestNotificationsRoute
}

const AppRouteChildren: AppRouteChildren = {
  AppChatRoute: AppChatRoute,
  AppDiscoverRoute: AppDiscoverRoute,
  AppFriendsRoute: AppFriendsRoute,
  AppHomeRoute: AppHomeRoute,
  AppProfileRoute: AppProfileRoute,
  AppIndexRoute: AppIndexRoute,
  AppTestNotificationsRoute: AppTestNotificationsRoute,
}

const AppRouteWithChildren = AppRoute._addFileChildren(AppRouteChildren)

interface publicAuthRouteRouteChildren {
  publicAuthForgetPasswordRoute: typeof publicAuthForgetPasswordRoute
  publicAuthSignInRoute: typeof publicAuthSignInRoute
  publicAuthSignUpRoute: typeof publicAuthSignUpRoute
  publicAuthVerifyAccountRoute: typeof publicAuthVerifyAccountRoute
}

const publicAuthRouteRouteChildren: publicAuthRouteRouteChildren = {
  publicAuthForgetPasswordRoute: publicAuthForgetPasswordRoute,
  publicAuthSignInRoute: publicAuthSignInRoute,
  publicAuthSignUpRoute: publicAuthSignUpRoute,
  publicAuthVerifyAccountRoute: publicAuthVerifyAccountRoute,
}

const publicAuthRouteRouteWithChildren = publicAuthRouteRoute._addFileChildren(
  publicAuthRouteRouteChildren,
)

export interface FileRoutesByFullPath {
  '': typeof AppRouteWithChildren
  '/auth': typeof publicAuthRouteRouteWithChildren
  '/healthcheck': typeof publicHealthcheckRoute
  '/chat': typeof AppChatRoute
  '/discover': typeof AppDiscoverRoute
  '/friends': typeof AppFriendsRoute
  '/home': typeof AppHomeRoute
  '/profile': typeof AppProfileRoute
  '/': typeof AppIndexRoute
  '/auth/forget-password': typeof publicAuthForgetPasswordRoute
  '/auth/sign-in': typeof publicAuthSignInRoute
  '/auth/sign-up': typeof publicAuthSignUpRoute
  '/auth/verify-account': typeof publicAuthVerifyAccountRoute
  '/test/notifications': typeof AppTestNotificationsRoute
}

export interface FileRoutesByTo {
  '/auth': typeof publicAuthRouteRouteWithChildren
  '/healthcheck': typeof publicHealthcheckRoute
  '/chat': typeof AppChatRoute
  '/discover': typeof AppDiscoverRoute
  '/friends': typeof AppFriendsRoute
  '/home': typeof AppHomeRoute
  '/profile': typeof AppProfileRoute
  '/': typeof AppIndexRoute
  '/auth/forget-password': typeof publicAuthForgetPasswordRoute
  '/auth/sign-in': typeof publicAuthSignInRoute
  '/auth/sign-up': typeof publicAuthSignUpRoute
  '/auth/verify-account': typeof publicAuthVerifyAccountRoute
  '/test/notifications': typeof AppTestNotificationsRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_app': typeof AppRouteWithChildren
  '/(public)/auth': typeof publicAuthRouteRouteWithChildren
  '/(public)/healthcheck': typeof publicHealthcheckRoute
  '/_app/chat': typeof AppChatRoute
  '/_app/discover': typeof AppDiscoverRoute
  '/_app/friends': typeof AppFriendsRoute
  '/_app/home': typeof AppHomeRoute
  '/_app/profile': typeof AppProfileRoute
  '/_app/': typeof AppIndexRoute
  '/(public)/auth/forget-password': typeof publicAuthForgetPasswordRoute
  '/(public)/auth/sign-in': typeof publicAuthSignInRoute
  '/(public)/auth/sign-up': typeof publicAuthSignUpRoute
  '/(public)/auth/verify-account': typeof publicAuthVerifyAccountRoute
  '/_app/test/notifications': typeof AppTestNotificationsRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/auth'
    | '/healthcheck'
    | '/chat'
    | '/discover'
    | '/friends'
    | '/home'
    | '/profile'
    | '/'
    | '/auth/forget-password'
    | '/auth/sign-in'
    | '/auth/sign-up'
    | '/auth/verify-account'
    | '/test/notifications'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/auth'
    | '/healthcheck'
    | '/chat'
    | '/discover'
    | '/friends'
    | '/home'
    | '/profile'
    | '/'
    | '/auth/forget-password'
    | '/auth/sign-in'
    | '/auth/sign-up'
    | '/auth/verify-account'
    | '/test/notifications'
  id:
    | '__root__'
    | '/_app'
    | '/(public)/auth'
    | '/(public)/healthcheck'
    | '/_app/chat'
    | '/_app/discover'
    | '/_app/friends'
    | '/_app/home'
    | '/_app/profile'
    | '/_app/'
    | '/(public)/auth/forget-password'
    | '/(public)/auth/sign-in'
    | '/(public)/auth/sign-up'
    | '/(public)/auth/verify-account'
    | '/_app/test/notifications'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AppRoute: typeof AppRouteWithChildren
  publicAuthRouteRoute: typeof publicAuthRouteRouteWithChildren
  publicHealthcheckRoute: typeof publicHealthcheckRoute
}

const rootRouteChildren: RootRouteChildren = {
  AppRoute: AppRouteWithChildren,
  publicAuthRouteRoute: publicAuthRouteRouteWithChildren,
  publicHealthcheckRoute: publicHealthcheckRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_app",
        "/(public)/auth",
        "/(public)/healthcheck"
      ]
    },
    "/_app": {
      "filePath": "_app.tsx",
      "children": [
        "/_app/chat",
        "/_app/discover",
        "/_app/friends",
        "/_app/home",
        "/_app/profile",
        "/_app/",
        "/_app/test/notifications"
      ]
    },
    "/(public)/auth": {
      "filePath": "(public)/auth/route.tsx",
      "children": [
        "/(public)/auth/forget-password",
        "/(public)/auth/sign-in",
        "/(public)/auth/sign-up",
        "/(public)/auth/verify-account"
      ]
    },
    "/(public)/healthcheck": {
      "filePath": "(public)/healthcheck.tsx"
    },
    "/_app/chat": {
      "filePath": "_app/chat.tsx",
      "parent": "/_app"
    },
    "/_app/discover": {
      "filePath": "_app/discover.tsx",
      "parent": "/_app"
    },
    "/_app/friends": {
      "filePath": "_app/friends.tsx",
      "parent": "/_app"
    },
    "/_app/home": {
      "filePath": "_app/home.tsx",
      "parent": "/_app"
    },
    "/_app/profile": {
      "filePath": "_app/profile.tsx",
      "parent": "/_app"
    },
    "/_app/": {
      "filePath": "_app/index.tsx",
      "parent": "/_app"
    },
    "/(public)/auth/forget-password": {
      "filePath": "(public)/auth/forget-password.tsx",
      "parent": "/(public)/auth"
    },
    "/(public)/auth/sign-in": {
      "filePath": "(public)/auth/sign-in.tsx",
      "parent": "/(public)/auth"
    },
    "/(public)/auth/sign-up": {
      "filePath": "(public)/auth/sign-up.tsx",
      "parent": "/(public)/auth"
    },
    "/(public)/auth/verify-account": {
      "filePath": "(public)/auth/verify-account.tsx",
      "parent": "/(public)/auth"
    },
    "/_app/test/notifications": {
      "filePath": "_app/test/notifications.tsx",
      "parent": "/_app"
    }
  }
}
ROUTE_MANIFEST_END */
