/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as LoginRouteImport } from './routes/login'
import { Route as appRouteRouteImport } from './routes/(app)/route'
import { Route as appIndexRouteImport } from './routes/(app)/index'
import { Route as appPropertyAddRouteImport } from './routes/(app)/property.add'
import { Route as appPropertyIdRouteImport } from './routes/(app)/property.$id'

const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const appRouteRoute = appRouteRouteImport.update({
  id: '/(app)',
  getParentRoute: () => rootRouteImport,
} as any)
const appIndexRoute = appIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => appRouteRoute,
} as any)
const appPropertyAddRoute = appPropertyAddRouteImport.update({
  id: '/property/add',
  path: '/property/add',
  getParentRoute: () => appRouteRoute,
} as any)
const appPropertyIdRoute = appPropertyIdRouteImport.update({
  id: '/property/$id',
  path: '/property/$id',
  getParentRoute: () => appRouteRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof appIndexRoute
  '/login': typeof LoginRoute
  '/property/$id': typeof appPropertyIdRoute
  '/property/add': typeof appPropertyAddRoute
}
export interface FileRoutesByTo {
  '/login': typeof LoginRoute
  '/': typeof appIndexRoute
  '/property/$id': typeof appPropertyIdRoute
  '/property/add': typeof appPropertyAddRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/(app)': typeof appRouteRouteWithChildren
  '/login': typeof LoginRoute
  '/(app)/': typeof appIndexRoute
  '/(app)/property/$id': typeof appPropertyIdRoute
  '/(app)/property/add': typeof appPropertyAddRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/login' | '/property/$id' | '/property/add'
  fileRoutesByTo: FileRoutesByTo
  to: '/login' | '/' | '/property/$id' | '/property/add'
  id:
    | '__root__'
    | '/(app)'
    | '/login'
    | '/(app)/'
    | '/(app)/property/$id'
    | '/(app)/property/add'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  appRouteRoute: typeof appRouteRouteWithChildren
  LoginRoute: typeof LoginRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(app)': {
      id: '/(app)'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof appRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(app)/': {
      id: '/(app)/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof appIndexRouteImport
      parentRoute: typeof appRouteRoute
    }
    '/(app)/property/add': {
      id: '/(app)/property/add'
      path: '/property/add'
      fullPath: '/property/add'
      preLoaderRoute: typeof appPropertyAddRouteImport
      parentRoute: typeof appRouteRoute
    }
    '/(app)/property/$id': {
      id: '/(app)/property/$id'
      path: '/property/$id'
      fullPath: '/property/$id'
      preLoaderRoute: typeof appPropertyIdRouteImport
      parentRoute: typeof appRouteRoute
    }
  }
}

interface appRouteRouteChildren {
  appIndexRoute: typeof appIndexRoute
  appPropertyIdRoute: typeof appPropertyIdRoute
  appPropertyAddRoute: typeof appPropertyAddRoute
}

const appRouteRouteChildren: appRouteRouteChildren = {
  appIndexRoute: appIndexRoute,
  appPropertyIdRoute: appPropertyIdRoute,
  appPropertyAddRoute: appPropertyAddRoute,
}

const appRouteRouteWithChildren = appRouteRoute._addFileChildren(
  appRouteRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  appRouteRoute: appRouteRouteWithChildren,
  LoginRoute: LoginRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
